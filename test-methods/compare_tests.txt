--------------------------------------------------------------------------------
Test 01, dim 02: Гладкая функция:
	f(x,y) = 1+x+y-xy+x^2+y^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  5.42101e-20, число итераций =    2)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    2)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =            0, число итераций =    2)

--------------------------------------------------------------------------------
Test 02, dim 02: Гладкая функция:
	f(x,y) = 1+7x+5y+0.5xy+3x^2+y^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    2)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  8.67362e-19, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    2)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    2)

--------------------------------------------------------------------------------
Test 03, dim 02: Гладкая функция:
	f(x,y) = 100+7x+5y-10xy+3x^2+10y^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =            0, число итераций =    2)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума = -2.77556e-17, число итераций =    2)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =            0, число итераций =    2)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =            0, число итераций =    2)

--------------------------------------------------------------------------------
Test 04, dim 02: Гладкая функция:
	f(x,y) = 100+7x+5y-10.95xy+3x^2+10y^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума = -9.09495e-13, число итераций =    3)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  9.09495e-13, число итераций =    3)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    3)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  9.09495e-13, число итераций =    3)

--------------------------------------------------------------------------------
Test 05, dim 03: Гладкая функция:
	f(x,y,z) = 1+x+y+z+xy+xz+yz+x^2+y^2+z^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =            0, число итераций =    2)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума = -5.42101e-20, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    2)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =            0, число итераций =    2)

--------------------------------------------------------------------------------
Test 06, dim 02: Гладкая функция:
	f(x,y) = 10x^4+15y^4+15xy (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума = -1.36441e-12, число итераций =    6)
	Из точки #1 справился лучше всего метод       Powell (отклонение от глобального минимума =  2.76736e-06, число итераций =    5)
	Из точки #2 справился лучше всего метод       Powell (отклонение от глобального минимума =  1.36511e-07, число итераций =    8)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума = -1.36439e-12, число итераций =   10)

--------------------------------------------------------------------------------
Test 07, dim 02: Гладкая функция:
	f(x,y) = 10x^6+15y^6-20x^3y+xy^3 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =  1.03715e-05, число итераций =    4)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума = -3.51018e-10, число итераций =   12)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума = -3.51018e-10, число итераций =   12)
	Из точки #3 справился лучше всего метод       Powell (отклонение от глобального минимума =  8.65615e-06, число итераций =    5)

--------------------------------------------------------------------------------
Test 08, dim 02: Гладкая функция:
	f(x,y) = x^6+y^6-2(x^3y+xy^3)+x^2+y^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  9.59174e-17, число итераций =    7)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  3.10299e-15, число итераций =   13)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  3.10299e-15, число итераций =   13)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.00056e-16, число итераций =   13)

--------------------------------------------------------------------------------
Test 09, dim 02: Гладкая функция:
	f(x,y) = x^6+y^6-3(x^3y+xy^3)+x^2+y^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =  3.28596e-07, число итераций =    6)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума = -7.78744e-10, число итераций =   11)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума = -7.78744e-10, число итераций =   11)
	Из точки #3 справился лучше всего метод       Powell (отклонение от глобального минимума =  3.46434e-06, число итераций =    5)

--------------------------------------------------------------------------------
Test 10, dim 02: Гладкая функция:
	f(x,y) = x^6+y^6-2(x^3y+xy^3)+x^4+y^4-x^2-y^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =   3.3839e-15, число итераций =    3)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  2.69403e-15, число итераций =   12)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  2.69403e-15, число итераций =   12)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  2.22476e-14, число итераций =   61)

--------------------------------------------------------------------------------
Test 11, dim 02: Гладкая функция Химмельблау:
	f(x,y) = (x^2+y-11)^2+(x+y^2-7)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =  2.89767e-14, число итераций =   71)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  2.74967e-16, число итераций =    6)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.69491e-16, число итераций =    7)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.99338e-16, число итераций =    6)

--------------------------------------------------------------------------------
Test 15, dim 02: Гладкая функция Матиаса:
	f(x,y) = 0.26(x^2+y^2)-0.48xy (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =  3.41484e-62, число итераций =    2)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.59612e-48, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.59612e-48, число итераций =    2)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  7.46503e-50, число итераций =    2)

--------------------------------------------------------------------------------
Test 18, dim 02: Гладкая функция Зеттла:
	f(x,y) = x/4+(x^2-2x+y^2)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  4.58581e-14, число итераций =    9)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  4.58581e-14, число итераций =    9)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  4.55238e-15, число итераций =   30)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  6.89179e-15, число итераций =   24)

--------------------------------------------------------------------------------
Test 19, dim 02: Гладкая функция Биля:
	f(x,y) = (xy-x+1.5)^2+(xy^2-x+2.25)^2+(x*y^3-x+2.625)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =   1.3259e-10, число итераций =    7)
	Из точки #1 справился лучше всего метод       Powell (отклонение от глобального минимума =  3.77485e-14, число итераций =   10)
	Из точки #2 справился лучше всего метод     Nesterov (отклонение от глобального минимума =    0.0627731, число итераций =  100)
	Из точки #3 справился лучше всего метод          DFP (отклонение от глобального минимума =  4.25829e-12, число итераций =   23)

--------------------------------------------------------------------------------
Test 21, dim 02: Гладкая функция:
	f(x,y) = (y-x^2)^2+(1-x)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =  1.20859e-15, число итераций =    3)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  9.98173e-16, число итераций =    6)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  8.63876e-17, число итераций =    6)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.61674e-15, число итераций =    6)

--------------------------------------------------------------------------------
Test 22, dim 02: Гладкая функция:
	f(x,y) = (y-x^2)^2+100(1-x)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  4.40062e-18, число итераций =    3)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  4.45956e-18, число итераций =    6)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  3.79168e-18, число итераций =    5)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  4.38221e-18, число итераций =    6)

--------------------------------------------------------------------------------
Test 23, dim 02: Гладкая функция:
	f(x,y) = 100(y-x^3)^2+(1-x)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =  2.17787e-13, число итераций =    3)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.00646e-12, число итераций =   11)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  2.15434e-12, число итераций =    8)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  3.46255e-10, число итераций =    9)

--------------------------------------------------------------------------------
Test 24, dim 04: Гладкая функция:
	f(x,y,z,t) = (x+10y)^2+5(z-t)^2+(y-2z)^4+10(x-t)^4 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =   2.2838e-09, число итераций =   39)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  4.48894e-09, число итераций =   41)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  2.54426e-09, число итераций =   37)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  2.54426e-09, число итераций =   37)
	Из точки #4 справился лучше всего метод       Powell (отклонение от глобального минимума =  1.02272e-08, число итераций =   31)

--------------------------------------------------------------------------------
Test 25, dim 04: Гладкая функция:
	f(x,y,z,t) = (x^2-y+1)^4+100(y-z)^6+tg^4(z-t)+x^8+(t-1)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =  2.38554e-09, число итераций =   12)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.04227e-08, число итераций =   16)
	Из точки #2 справился лучше всего метод       Powell (отклонение от глобального минимума =  9.99052e-09, число итераций =   11)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.52686e-08, число итераций =   21)
	Из точки #4 справился лучше всего метод       Powell (отклонение от глобального минимума =  1.24832e-08, число итераций =   11)

--------------------------------------------------------------------------------
Test 26, dim 02: Гладкая функция:
	f(x1, ..., xn) = sum_(i=1)^(n-1) (x_i^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  3.29103e-48, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  3.29103e-48, число итераций =    2)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  3.29103e-48, число итераций =    2)

--------------------------------------------------------------------------------
Test 26, dim 04: Гладкая функция:
	f(x1, ..., xn) = sum_(i=1)^(n-1) (x_i^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  6.58206e-48, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  6.58206e-48, число итераций =    2)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  6.58206e-48, число итераций =    2)

--------------------------------------------------------------------------------
Test 26, dim 08: Гладкая функция:
	f(x1, ..., xn) = sum_(i=1)^(n-1) (x_i^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.56025e-60, число итераций =    2)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  5.89882e-48, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  5.89882e-48, число итераций =    2)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  5.89882e-48, число итераций =    2)

--------------------------------------------------------------------------------
Test 26, dim 12: Гладкая функция:
	f(x1, ..., xn) = sum_(i=1)^(n-1) (x_i^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =  3.60499e-48, число итераций =    2)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.97462e-47, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.97462e-47, число итераций =    2)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.97462e-47, число итераций =    2)

--------------------------------------------------------------------------------
Test 27, dim 02: Гладкая функция Нестерова Чебышева-Розенброка 1:
	f(x1, ..., xn) = (x1-1)^2/4+sum_(i=1)^(n-1)(x_(i+1)-2*x_i^2+1)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.12607e-13, число итераций =    3)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  2.04118e-14, число итераций =    6)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  7.94879e-15, число итераций =    5)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  2.50219e-14, число итераций =    6)

--------------------------------------------------------------------------------
Test 27, dim 04: Гладкая функция Нестерова Чебышева-Розенброка 1:
	f(x1, ..., xn) = (x1-1)^2/4+sum_(i=1)^(n-1)(x_(i+1)-2*x_i^2+1)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =  0.000683381, число итераций =  100)
	Из точки #1 справился лучше всего метод       Powell (отклонение от глобального минимума =  6.19484e-08, число итераций =   86)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  5.37152e-08, число итераций =   83)
	Из точки #3 справился лучше всего метод       Powell (отклонение от глобального минимума =      1.09642, число итераций =    6)

--------------------------------------------------------------------------------
Test 27, dim 08: Гладкая функция Нестерова Чебышева-Розенброка 1:
	f(x1, ..., xn) = (x1-1)^2/4+sum_(i=1)^(n-1)(x_(i+1)-2*x_i^2+1)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод          DFP (отклонение от глобального минимума =     0.983031, число итераций =   10)
	Из точки #1 справился лучше всего метод       Powell (отклонение от глобального минимума =    0.0419832, число итераций =  100)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  7.36905e-07, число итераций =    9)
	Из точки #3 справился лучше всего метод       Powell (отклонение от глобального минимума =    0.0165527, число итераций =   11)

--------------------------------------------------------------------------------
Test 27, dim 12: Гладкая функция Нестерова Чебышева-Розенброка 1:
	f(x1, ..., xn) = (x1-1)^2/4+sum_(i=1)^(n-1)(x_(i+1)-2*x_i^2+1)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод          DFP (отклонение от глобального минимума =     0.983031, число итераций =   15)
	Из точки #1 справился лучше всего метод       Powell (отклонение от глобального минимума =    0.0577705, число итераций =   25)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.12426e-11, число итераций =    9)
	Из точки #3 справился лучше всего метод       Powell (отклонение от глобального минимума =    0.0442532, число итераций =   16)

--------------------------------------------------------------------------------
Test 28, dim 02: Гладкая функция Розенброка:
	f(x1, ..., xn) = sum_(i=1)^(n-1) (100(x_i^2-x_(i+1))^2+(x_i-1)^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.60763e-11, число итераций =    3)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  2.94836e-12, число итераций =    6)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =   8.2054e-14, число итераций =    5)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  9.54243e-13, число итераций =    5)

--------------------------------------------------------------------------------
Test 28, dim 04: Гладкая функция Розенброка:
	f(x1, ..., xn) = sum_(i=1)^(n-1) (100(x_i^2-x_(i+1))^2+(x_i-1)^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.02751e-11, число итераций =    3)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  7.32012e-12, число итераций =    5)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  6.90295e-12, число итераций =    5)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  4.36845e-12, число итераций =    8)

--------------------------------------------------------------------------------
Test 28, dim 08: Гладкая функция Розенброка:
	f(x1, ..., xn) = sum_(i=1)^(n-1) (100(x_i^2-x_(i+1))^2+(x_i-1)^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.67073e-11, число итераций =    3)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.62745e-11, число итераций =    6)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =    1.584e-11, число итераций =    5)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  1.52558e-11, число итераций =    5)

--------------------------------------------------------------------------------
Test 28, dim 12: Гладкая функция Розенброка:
	f(x1, ..., xn) = sum_(i=1)^(n-1) (100(x_i^2-x_(i+1))^2+(x_i-1)^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  2.46815e-11, число итераций =    3)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  2.51646e-11, число итераций =    6)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  2.35651e-11, число итераций =    5)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =   2.5088e-11, число итераций =    6)

--------------------------------------------------------------------------------
Test 30, dim 02: Гладкая функция:
	f(x1, ..., xn) = x_1^2+10^6*sum_(i=1)^(n-1) (x_i^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.37249e-41, число итераций =    2)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  6.86355e-42, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  6.86355e-42, число итераций =    2)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  6.86355e-42, число итераций =    2)

--------------------------------------------------------------------------------
Test 30, dim 04: Гладкая функция:
	f(x1, ..., xn) = x_1^2+10^6*sum_(i=1)^(n-1) (x_i^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.13407e-41, число итераций =    2)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.79825e-41, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.79825e-41, число итераций =    2)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.79825e-41, число итераций =    2)

--------------------------------------------------------------------------------
Test 30, dim 08: Гладкая функция:
	f(x1, ..., xn) = x_1^2+10^6*sum_(i=1)^(n-1) (x_i^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =   4.5698e-25, число итераций =    2)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  4.54877e-22, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  4.54877e-22, число итераций =    2)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  4.54877e-22, число итераций =    2)

--------------------------------------------------------------------------------
Test 30, dim 08: Гладкая функция:
	f(x1, ..., xn) = x_1^2+10^6*sum_(i=1)^(n-1) (x_i^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.86924e-24, число итераций =    2)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.08121e-40, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.08121e-40, число итераций =    2)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.08121e-40, число итераций =    2)

--------------------------------------------------------------------------------
Test 31, dim 02: Гладкая функция Голдштейна-Прайса:
	f(x,y) = [1+(x+y+1)^2(19-14x+3x^2-14y+6xy+3y^2)][30+(2x-3y)^2(18-32x+12x^2+48y-36xy+27y^2)] (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =      81.0001, число итераций =    6)
	Из точки #1 справился лучше всего метод     Nesterov (отклонение от глобального минимума =      32.1254, число итераций =  100)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  6.47039e-14, число итераций =    7)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  8.54585e-12, число итераций =    6)

--------------------------------------------------------------------------------
Test 32, dim 02: Негладкая функция Bukin06:
	f(x,y) = 100*sqrt(|y-0.01*x^2|)+0.01|x+10| (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =            0, число итераций =   23)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =         0.04, число итераций =    1)
	Из точки #2 справился лучше всего метод       Powell (отклонение от глобального минимума =         0.01, число итераций =    4)
	Из точки #3 справился лучше всего метод       Powell (отклонение от глобального минимума =       100.01, число итераций =    4)

--------------------------------------------------------------------------------
Test 33, dim 02: Гладкая функция Cosine Mixture:
	f(x1, ..., xn) = sum(x(i)^2)-0.1*sum(cos(5*pi*x(i))) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)

--------------------------------------------------------------------------------
Test 33, dim 04: Гладкая функция Cosine Mixture:
	f(x1, ..., xn) = sum(x(i)^2)-0.1*sum(cos(5*pi*x(i))) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)

--------------------------------------------------------------------------------
Test 33, dim 08: Гладкая функция Cosine Mixture:
	f(x1, ..., xn) = sum(x(i)^2)-0.1*sum(cos(5*pi*x(i))) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)

--------------------------------------------------------------------------------
Test 33, dim 12: Гладкая функция Cosine Mixture:
	f(x1, ..., xn) = sum(x(i)^2)-0.1*sum(cos(5*pi*x(i))) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    2)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    2)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    2)

--------------------------------------------------------------------------------
Test 34, dim 02: Гладкая функция Bukin02:
	f(x,y) = 100*(y-0.01*x^2+1)^2+0.01*(x+10)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  4.51898e-16, число итераций =    4)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  2.26073e-16, число итераций =    5)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  6.70848e-16, число итераций =    5)
	Из точки #3 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  8.84662e-16, число итераций =    4)
	Из точки #4 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  5.48676e-17, число итераций =    4)

--------------------------------------------------------------------------------
Test 35, dim 02: Негладкая функция BartelsConn:
	f(x,y) = |x^2+y^2+x*y|+|sin(x)|+|sin(y)| (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)
	Из точки #1 справился лучше всего метод       Powell (отклонение от глобального минимума =            3, число итераций =    5)
	Из точки #2 справился лучше всего метод       Powell (отклонение от глобального минимума =            2, число итераций =   35)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =            0, число итераций =    1)

--------------------------------------------------------------------------------
Test 36, dim 02: Гладкая функция Price04:
	f(x,y) = (2*x^3*y-y^3)^2+(6x-y^2+y)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  7.25098e-08, число итераций =   22)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  9.38864e-13, число итераций =   15)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =   1.3964e-13, число итераций =   20)
	Из точки #3 справился лучше всего метод       Powell (отклонение от глобального минимума =  2.42686e-09, число итераций =   12)

--------------------------------------------------------------------------------
Test 37, dim 02: Гладкая функция:
	f(x,y) = (2x^2 -1.05x^4 + x^6/6 + xy) + y^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =  1.71883e-08, число итераций =    6)
	Из точки #1 справился лучше всего метод          DFP (отклонение от глобального минимума =  9.32031e-16, число итераций =    5)
	Из точки #2 справился лучше всего метод          DFP (отклонение от глобального минимума =  9.32031e-16, число итераций =    5)
	Из точки #3 справился лучше всего метод       Powell (отклонение от глобального минимума =  1.71883e-08, число итераций =    6)

--------------------------------------------------------------------------------
Test 38, dim 02: Гладкая функция:
	f(x,y) = (4-2.1*x1^2+x1^4/3)*x1^2+x1*x2+(-4+4*x2^2)*x2^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =  8.78514e-08, число итераций =    5)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума = -3.05618e-08, число итераций =    7)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума = -3.05618e-08, число итераций =    7)
	Из точки #3 справился лучше всего метод       Powell (отклонение от глобального минимума =  1.48513e-06, число итераций =    5)
	Из точки #4 справился лучше всего метод Hessian Free (отклонение от глобального минимума = -3.05618e-08, число итераций =    7)

--------------------------------------------------------------------------------
Test 39, dim 02: Гладкая функция:
	f(x,y) = (-1.275*x1^2/pi^2+5*x1/pi+x2-6)^2 + (10-5/(4*pi))*cos(x1)+10 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  8.67362e-19, число итераций =    4)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  8.67362e-19, число итераций =    4)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =  8.67362e-19, число итераций =    6)
	Из точки #3 справился лучше всего метод          DFP (отклонение от глобального минимума =  2.14152e-15, число итераций =    9)

--------------------------------------------------------------------------------
Test 40, dim 02: Гладкая функция:
	f(x,y) = (-1.275*x1^2/M_PI^2+5*x1/M_PI+x2-6)^2 + (10-5/(4*M_PI))*cos(x1)*cos(x2)+log(x1^2+x2^2+1)+10 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод     Nesterov (отклонение от глобального минимума =      1.26096, число итераций =  100)
	Из точки #1 справился лучше всего метод          DFP (отклонение от глобального минимума = -0.000122917, число итераций =   15)
	Из точки #2 справился лучше всего метод          DFP (отклонение от глобального минимума =      1.25155, число итераций =   10)
	Из точки #3 справился лучше всего метод       Powell (отклонение от глобального минимума =      5.18241, число итераций =    5)

--------------------------------------------------------------------------------
Test 41, dim 02: Гладкая функция RotatedEllipse01:
	f(x,y) = 7x^2-6*sqrt(3)*x*y+13y^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =  2.26428e-47, число итераций =    2)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  2.95134e-44, число итераций =    2)

--------------------------------------------------------------------------------
Test 42, dim 02: Гладкая функция:
	f(x,y) = x^2 + y^2 + 25[sin^2(x) + sin^2(y)] (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.26876e-21, число итераций =    4)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.26876e-21, число итераций =    4)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.26876e-21, число итераций =    4)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.26876e-21, число итераций =    4)

--------------------------------------------------------------------------------
Test 43, dim 02: Гладкая функция RotatedEllipse02:
	f(x,y) = x^2-x*y+y^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =  4.07048e-48, число итераций =    3)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  2.77251e-48, число итераций =    3)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  4.25609e-48, число итераций =    2)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума =  3.52948e-35, число итераций =    2)

--------------------------------------------------------------------------------
Test 44, dim 02: Гладкая функция Bird:
	f(x,y) = (x-y)^2+exp((1-sin(x))^2)cos(y)+exp((1-cos(y))^2)*sin(x) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума = -2.94613e-08, число итераций =    8)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума = -2.94608e-08, число итераций =    8)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =      58.3585, число итераций =    7)
	Из точки #3 справился лучше всего метод         BFGS (отклонение от глобального минимума = -2.94612e-08, число итераций =    8)

--------------------------------------------------------------------------------
Test 45, dim 02: Гладкая функция Hosaki:
	f(x,y) = (1-8x+7x^2-7.0/3*x^3+1.0/4*x^4)*y^2*exp(-y^2) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =  1.41615e-07, число итераций =    4)
	Из точки #1 справился лучше всего метод Hessian Free (отклонение от глобального минимума =     0.827729, число итераций =    8)
	Из точки #2 справился лучше всего метод Hessian Free (отклонение от глобального минимума =     0.827729, число итераций =    8)
	Из точки #3 справился лучше всего метод       Powell (отклонение от глобального минимума =            0, число итераций =    3)
	Из точки #4 справился лучше всего метод       Powell (отклонение от глобального минимума =            0, число итераций =    3)

--------------------------------------------------------------------------------
Test 46, dim 02: Гладкая функция El-Attar-Vidyasagar-Dutta:
	f(x,y) = (x^2+y-10)^2+(x+y^2-7)^2+(x^2+y^3-1)^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод Hessian Free (отклонение от глобального минимума = -4.85705e-09, число итераций =    5)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума = -4.85704e-09, число итераций =   12)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума = -4.85647e-09, число итераций =   14)
	Из точки #3 справился лучше всего метод          DFP (отклонение от глобального минимума = -4.85692e-09, число итераций =   14)

--------------------------------------------------------------------------------
Test 47, dim 02: Гладкая функция Ursem01:
	f(x,y) = -sin(2x-0.5*pi)-3cos(y)+0.5x^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод          DFP (отклонение от глобального минимума = -4.16171e-12, число итераций =    6)
	Из точки #1 справился лучше всего метод          DFP (отклонение от глобального минимума = -4.16179e-12, число итераций =    6)
	Из точки #2 справился лучше всего метод          DFP (отклонение от глобального минимума = -4.16171e-12, число итераций =    6)
	Из точки #3 справился лучше всего метод          DFP (отклонение от глобального минимума = -4.16179e-12, число итераций =    6)

--------------------------------------------------------------------------------
Test 48, dim 02: Негладкая функция Alpine01:
	f(x,y) = sum(abs(x(i)*sin(x(i))+0.1x(i))) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод     Nesterov (отклонение от глобального минимума =  7.63991e-05, число итераций =  100)
	Из точки #1 справился лучше всего метод       Powell (отклонение от глобального минимума =  8.41905e-05, число итераций =    3)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.97998e-08, число итераций =    6)
	Из точки #3 справился лучше всего метод     Nesterov (отклонение от глобального минимума =   0.00276592, число итераций =  100)
	Из точки #4 справился лучше всего метод         BFGS (отклонение от глобального минимума =   0.00274068, число итераций =   25)

--------------------------------------------------------------------------------
Test 49, dim 02: Гладкая функция Levy13:
	f(x,y) = (x-1)^2*[sin^2(3 pi y) + 1] + (y-1)^2*[sin^2(2 pi y) + 1] + sin^2(3 pi x) (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.21266e-25, число итераций =    2)
	Из точки #1 справился лучше всего метод         BFGS (отклонение от глобального минимума =  2.18032e-13, число итераций =    2)
	Из точки #2 справился лучше всего метод         BFGS (отклонение от глобального минимума =  1.47165e-13, число итераций =    2)
	Из точки #3 справился лучше всего метод          DFP (отклонение от глобального минимума =  3.98317e-13, число итераций =    2)

--------------------------------------------------------------------------------
Test 50, dim 02: Гладкая функция Mishra08:
	f(x,y) = 0.001[|x^10 -20x^9 +180x^8 -960x^7 +3360x^6 -8064x^5 +13340x^4 -15360x^3 +11520x^2 -5120x +2624||y^4 +12y^3 +54y^2 +108y +81|]^2 (критерий остановы: iter_counter >= 100 || |f_i-f_(i-1)| < 0.00000001)

	Из точки #0 справился лучше всего метод       Powell (отклонение от глобального минимума =  6.70688e-41, число итераций =    3)
	Из точки #1 справился лучше всего метод       Powell (отклонение от глобального минимума =  2.55567e-37, число итераций =    3)
	Из точки #2 справился лучше всего метод       Powell (отклонение от глобального минимума =  6.02052e-32, число итераций =    5)
	Из точки #3 справился лучше всего метод       Powell (отклонение от глобального минимума =  1.10651e-31, число итераций =    5)

